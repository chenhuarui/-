<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置属性持有对象-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!--配置连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>


    <!--SessionFactory-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!--配置数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置hibernate属性-->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
        <!--配置映射文件-->
        <property name="mappingLocations">
            <list>
                <value>classpath:source/hbm/xml/*.hbm.xml</value>
            </list>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>entity.FolderEntity</value>
                <value>entity.FileEntity</value>
                <value>entity.RelationshipEntity</value>
                <value>entity.UserEntity</value>
            </list>
        </property>
    </bean>

    <!--配置Spring的声明式事务-->
    <!--1.配置事务管理器-->
    <bean id="hibernateTransactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!--2.配置事物属性,需要事务管理器-->
    <tx:advice id="txAdvice" transaction-manager="hibernateTransactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    <!--3.配置事物切点(切点表达式)，并把切点和事物属性关联起来(哪些类的哪些方法参与事务)-->
    <aop:config>
        <aop:pointcut id="txPointCut" expression="execution(* dao.Impl.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
    </aop:config>

    <!--dao层-->
    <bean id="folderDao" class="dao.Impl.FolderDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean id="userDao" class="dao.Impl.UserDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean id="fileDao" class="dao.Impl.FileDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean id="uploadDao" class="dao.Impl.UploadDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <!--service层-->
    <bean id="folderService" class="service.Impl.FolderServiceImpl">
        <property name="folderDao" ref="folderDao"></property>
        <property name="fileDao" ref="fileDao"></property>

    </bean>

    <bean id="userService" class="service.Impl.UserServiceImpl">
        <property name="userDao" ref="userDao"></property>
    </bean>

    <bean id="fileService" class="service.Impl.FileServiceImpl">
        <property name="fileDao" ref="fileDao"></property>
        <property name="folderDao" ref="folderDao"></property>
    </bean>

    <bean id="uploadService" class="service.Impl.UploadServiceImpl">
        <property name="uploadDao" ref="uploadDao"></property>
        <property name="fileDao" ref="fileDao"></property>
    </bean>

    <!--action层-->
    <bean id="folderAction" class="action.FolderAction" scope="prototype">
        <property name="folderService" ref="folderService"></property>
    </bean>

    <bean id="userAction" class="action.UserAction" scope="prototype">
        <property name="userService" ref="userService"></property>
    </bean>

    <bean id="fileAction" class="action.FileAction" scope="prototype">
        <property name="fileService" ref="fileService"></property>
        <property name="folderService" ref="folderService"></property>
        <property name="userService" ref="userService"></property>
    </bean>

    <bean id="uploadAction" class="action.UploadAction" scope="prototype">
        <property name="uploadService" ref="uploadService"></property>
        <property name="folderService" ref="folderService"></property>
    </bean>

    <bean id="downloadAction" class="action.DownloadAction" scope="prototype">
        <property name="fileService" ref="fileService"></property>
    </bean>

</beans>